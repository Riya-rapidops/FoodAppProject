{"ast":null,"code":"import { checkSpecial, notEmpty, ValidateEmail, ValidatePassword, ValidatePhone } from \"../../../utils/functions\";\nexport const LoginValidation = User => {\n  if (ValidateEmail(User.username) && notEmpty(User.password, \"Password\")) return true;\n  return false;\n};\n_c = LoginValidation;\nexport const RegiterValidation = User => {\n  if (checkSpecial(User.username) && ValidateEmail(User.email) && ValidatePhone(User.phone) && ValidatePassword(User.password)) return true;\n  return false;\n};\n_c2 = RegiterValidation;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginValidation\");\n$RefreshReg$(_c2, \"RegiterValidation\");","map":{"version":3,"names":["checkSpecial","notEmpty","ValidateEmail","ValidatePassword","ValidatePhone","LoginValidation","User","username","password","RegiterValidation","email","phone"],"sources":["/home/ad.rapidops.com/riya.panchal/Downloads/speedyfood-main/client/src/pages/Auth/Utils/Validation.js"],"sourcesContent":["import { checkSpecial, notEmpty, ValidateEmail, ValidatePassword, ValidatePhone } from \"../../../utils/functions\";\n\nexport const LoginValidation = User => {\n\n    if(ValidateEmail(User.username) && notEmpty(User.password,\"Password\"))\n            return true\n    return false\n}\n\nexport const RegiterValidation = User => {\n\n    if(checkSpecial(User.username) \n        && ValidateEmail(User.email) \n        && ValidatePhone(User.phone) \n        && ValidatePassword(User.password))\n            return true\n    return false\n}"],"mappings":"AAAA,SAASA,YAAY,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,0BAA0B;AAEjH,OAAO,MAAMC,eAAe,GAAGC,IAAI,IAAI;EAEnC,IAAGJ,aAAa,CAACI,IAAI,CAACC,QAAQ,CAAC,IAAIN,QAAQ,CAACK,IAAI,CAACE,QAAQ,EAAC,UAAU,CAAC,EAC7D,OAAO,IAAI;EACnB,OAAO,KAAK;AAChB,CAAC;AAAA,KALYH,eAAe;AAO5B,OAAO,MAAMI,iBAAiB,GAAGH,IAAI,IAAI;EAErC,IAAGN,YAAY,CAACM,IAAI,CAACC,QAAQ,CAAC,IACvBL,aAAa,CAACI,IAAI,CAACI,KAAK,CAAC,IACzBN,aAAa,CAACE,IAAI,CAACK,KAAK,CAAC,IACzBR,gBAAgB,CAACG,IAAI,CAACE,QAAQ,CAAC,EAC9B,OAAO,IAAI;EACnB,OAAO,KAAK;AAChB,CAAC;AAAA,MARYC,iBAAiB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}